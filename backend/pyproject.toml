[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "omnicourse-backend"
version = "0.1.0"
description = "AI-assisted course authoring and export platform"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "OmniCourse Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "django>=4.2.0,<5.0",
    "djangorestframework>=3.14.0",
    "djangorestframework-simplejwt>=5.3.0",
    "django-cors-headers>=4.3.0",
    "django-storages>=1.14.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    "boto3>=1.28.0",
    "botocore>=1.31.0",
    "pydantic>=2.4.0",
    "python-decouple>=3.8",
    "sentry-sdk[django]>=1.32.0",
    "gunicorn>=21.2.0",
    "whitenoise>=6.5.0",
    "drf-spectacular>=0.26.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.7.0",
    "isort>=5.12.0",
    "ruff>=0.0.287",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "pre-commit>=3.4.0",
    "django-extensions>=3.2.0",
    "ipython>=8.15.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = ["core", "ai", "courses", "assessment", "export", "jobs", "api"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"*/migrations/*" = ["F401", "E501"]
"*/settings/*" = ["F401", "F403", "F405"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "core.settings.*"
ignore_errors = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings.test"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=0"
django_find_project = false

[tool.hatch.build.targets.wheel]
packages = [
    "src/core",
    "src/api",
    "src/ai",
    "src/courses",
    "src/assessment",
    "src/export",
    "src/jobs",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
]
